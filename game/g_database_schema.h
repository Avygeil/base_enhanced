#pragma once

const char* const sqlCreateTables =
"CREATE TABLE IF NOT EXISTS [metadata] (                                                             \n"
"  [key] TEXT COLLATE NOCASE PRIMARY KEY NOT NULL,                                                   \n"
"  [value] TEXT DEFAULT NULL                                                                         \n"
");                                                                                                  \n"
"                                                                                                    \n"
"CREATE TABLE IF NOT EXISTS [accounts] (                                                             \n"
"    [account_id] INTEGER NOT NULL,                                                                  \n"
"    [name] TEXT COLLATE NOCASE NOT NULL,                                                            \n"
"    [created_on] INTEGER NOT NULL DEFAULT (strftime('%s', 'now')),                                  \n"
"    [usergroup] TEXT DEFAULT NULL,                                                                  \n"
"    [flags] INTEGER NOT NULL DEFAULT 0,                                                             \n"
"    PRIMARY KEY ( [account_id] ),                                                                   \n"
"    UNIQUE ( [name] )                                                                               \n"
");                                                                                                  \n"
"                                                                                                    \n"
"CREATE TABLE IF NOT EXISTS [sessions] (                                                             \n"
"    [session_id] INTEGER NOT NULL,                                                                  \n"
"    [hash] INTEGER NOT NULL,                                                                        \n"
"    [info] TEXT NOT NULL,                                                                           \n"
"    [account_id] INTEGER DEFAULT NULL,                                                              \n"
"    PRIMARY KEY ( [session_id] ),                                                                   \n"
"    UNIQUE ( [hash] ),                                                                              \n"
"    FOREIGN KEY ( [account_id] )                                                                    \n"
"        REFERENCES accounts ( [account_id] )                                                        \n"
"        ON DELETE SET NULL                                                                          \n"
");                                                                                                  \n"
"                                                                                                    \n"
"CREATE TABLE IF NOT EXISTS [nicknames] (                                                            \n"
"    [nickname_id] INTEGER NOT NULL,                                                                 \n"
"    [session_id] INTEGER NOT NULL,                                                                  \n"
"    [name] TEXT NOT NULL,                                                                           \n"
"    [duration] INTEGER NOT NULL DEFAULT 0,                                                          \n"
"    PRIMARY KEY ( [nickname_id] ),                                                                  \n"
"    UNIQUE ( [session_id], [name] ),                                                                \n"
"    FOREIGN KEY ( [session_id] )                                                                    \n"
"        REFERENCES sessions ( [session_id] )                                                        \n"
"        ON DELETE CASCADE                                                                           \n"
");                                                                                                  \n"
"                                                                                                    \n"
"CREATE TABLE IF NOT EXISTS [fastcaps] (                                                             \n"
"    [fastcap_id] INTEGER NOT NULL,                                                                  \n"
"    [mapname] TEXT NOT NULL,                                                                        \n"
"    [type] INTEGER NOT NULL,                                                                        \n"
"    [session_id] INTEGER NOT NULL,                                                                  \n"
"    [capture_time] INTEGER NOT NULL,                                                                \n"
"    [date] NOT NULL DEFAULT (strftime('%s', 'now')),                                                \n"
"    [extra] TEXT DEFAULT NULL,                                                                      \n"
"    PRIMARY KEY ( [fastcap_id] ),                                                                   \n"
"    UNIQUE ( [mapname], [type], [session_id] ),                                                     \n"
"    FOREIGN KEY ( [session_id] )                                                                    \n"
"        REFERENCES sessions ( [session_id] )                                                        \n"
");                                                                                                  \n"
"                                                                                                    \n"
"CREATE TABLE IF NOT EXISTS ip_whitelist (                                                           \n"
"    [ip_int] INTEGER PRIMARY KEY,                                                                   \n"
"    [mask_int] INTEGER,                                                                             \n"
"    [notes] TEXT);                                                                                  \n"
"                                                                                                    \n"
"CREATE TABLE IF NOT EXISTS ip_blacklist (                                                           \n"
"    [ip_int] INTEGER PRIMARY KEY,                                                                   \n"
"    [mask_int] INTEGER,                                                                             \n"
"    [notes] TEXT,                                                                                   \n"
"    [reason] TEXT,                                                                                  \n"
"    [banned_since] DATETIME,                                                                        \n"
"    [banned_until] DATETIME);                                                                       \n"
"                                                                                                    \n"
"CREATE TABLE IF NOT EXISTS pools (                                                                  \n"
"    [pool_id] INTEGER PRIMARY KEY AUTOINCREMENT,                                                    \n"
"    [short_name] TEXT,                                                                              \n"
"    [long_name] TEXT );                                                                             \n"
"                                                                                                    \n"
"CREATE TABLE IF NOT EXISTS pool_has_map (                                                           \n"
"    [pool_id] INTEGER REFERENCES [pools]([pool_id]) ON DELETE RESTRICT,                             \n"
"    [mapname] TEXT,                                                                                 \n"
"    [weight] INTEGER);                                                                              \n"
"                                                                                                    \n"
"CREATE VIEW IF NOT EXISTS sessions_info AS                                                          \n"
"SELECT                                                                                              \n"
"    session_id,                                                                                     \n"
"    hash,                                                                                           \n"
"    info,                                                                                           \n"
"    account_id,                                                                                     \n"
"    CASE WHEN ( sessions.account_id IS NOT NULL )                                                   \n"
"    THEN ( SELECT name FROM accounts WHERE accounts.account_id = sessions.account_id )              \n"
"    ELSE 'Padawan' END                                                                              \n"
"    display_name,                                                                                   \n"
"    CASE WHEN (                                                                                     \n"
"	     sessions.account_id IS NOT NULL                                                             \n"
"	     OR EXISTS( SELECT 1 FROM fastcaps WHERE fastcaps.session_id = sessions.session_id )         \n"
"    )                                                                                               \n"
"    THEN 1 ELSE 0 END                                                                               \n"
"    referenced                                                                                      \n"
"FROM sessions;                                                                                      \n"
"                                                                                                    \n"
"CREATE TRIGGER IF NOT EXISTS sessions_info_delete_trigger                                           \n"
"INSTEAD OF DELETE ON sessions_info                                                                  \n"
"BEGIN                                                                                               \n"
"    DELETE FROM sessions WHERE sessions.session_id = OLD.session_id;                                \n"
"END;                                                                                                \n"
"                                                                                                    \n"
"CREATE VIEW IF NOT EXISTS fastcaps_info AS                                                          \n"
"SELECT                                                                                              \n"
"    fastcap_id,                                                                                     \n"
"    mapname,                                                                                        \n"
"    type,                                                                                           \n"
"    CASE WHEN (                                                                                     \n"
"        ( SELECT account_id FROM sessions WHERE sessions.session_id = fastcaps.session_id )         \n"
"        IS NOT NULL                                                                                 \n"
"    )                                                                                               \n"
"    THEN 1 ELSE 0 END                                                                               \n"
"    logged_in,                                                                                      \n"
"    ( SELECT display_name FROM sessions_info WHERE sessions_info.session_id = fastcaps.session_id ) \n"
"    display_name,                                                                                   \n"
"    RANK() OVER (                                                                                   \n"
"	     PARTITION BY fastcaps.mapname, fastcaps.type                                                \n"
"	     ORDER BY fastcaps.capture_time ASC                                                          \n"
"    )                                                                                               \n"
"    rank,                                                                                           \n"
"    capture_time,                                                                                   \n"
"    date,                                                                                           \n"
"    extra                                                                                           \n"
"FROM fastcaps;                                                                                        ";
